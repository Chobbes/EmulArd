#+TITLE: EmulArd Documentation
#+AUTHOR: Calvin Beck
#+OPTIONS: ^:{}

* Arduino Program Clients
  Each Arduino program acts as a client to a server which actually
  pretends to be an Arduino. The program written for the Arduino
  actually communicates with the server via a protocol over stdin and
  stdout in order to set pin values and talk over serial to a virtual
  Arduino.
** Protocol
*** Serial
**** Serial Begin
     Pretend that we are initializing the serial port to a certain baud
     rate.

     : SERIAL_BEGIN <PORT_NUMBER> <BAUD_RATE>

     Arguments:
     - PORT_NUMBER: unsigned int for the serial port (Serial, Serial1, e.t.c.)
     - BAUD_RATE: unsigned long for the baud rate of the serial port.
     
     No response from the server.
**** Serial Write
     Send a single character over serial port.

     : SERIAL_WRITE <PORT_NUMBER> <char>

     Arguments:
     - PORT_NUMBER: unsigned int for the serial port (Serial, Serial1, e.t.c.)
     - char: just a regular C character.

     No response from the server.
**** Serial Read
     Read a single character from the serial port.

     : SERIAL_READ <PORT_NUMBER>

     Arguments:
     - PORT_NUMBER: unsigned int for the serial port (Serial, Serial1, e.t.c.)

     Returns a single character representing the character read from
     the serial port. This may be -1 if there were no characters
     available on the serial port.
**** Serial Available
     Check how many characters are available on the serial port.

     : SERIAL_AVAILABLE <PORT_NUMBER>

     Arguments:
     - PORT_NUMBER: unsigned int for the serial port (Serial, Serial1, e.t.c.)

     Returns an int for the number of characters waiting on the serial port.
*** Digital Pins
**** Digital Write
     Write to a digital pin.

     : DIGITAL_WRITE <PIN_NUMBER> <VALUE>

     Arguments:
     - PIN_NUMBER: uint8_t for the digital pin number.
     - VALUE: int to write to the digital pin. Should be HIGH or LOW.

     No response from the server.
**** Digital Read
     Read a value from a digital pin.

     : DIGITAL_READ <PIN_NUMBER>

     Arguments:
     - PIN_NUMBER: uint8_t for the digital pin number.

     Returns an int for the value of the pin.

*** Analog Pins
**** Analog Write
     Write to an analog pin.

     : ANALOG_WRITE <PIN_NUMBER> <VALUE>

     Arguments:
     - PIN_NUMBER: uint8_t for the analog pin number.
     - VALUE: int value to write to the pin.

     No response from the server.
**** Analog Read
     Read a value from an analog pin.

     : DIGITAL_READ <PIN_NUMBER>

     Arguments:
     - PIN_NUMBER: uint8_t for the analog pin number.

     Returns an int for the value of the pin.
*** Pin Mode
    Set a pin's mode.

    : PINMODE <MODE>

    Arguments:
    - MODE: A uint8_t for the mode. Should be INPUT, OUTPUT, or INPUT_PULLUP.

    No response from the server.
